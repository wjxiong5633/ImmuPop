% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ImmuPop_timet_est.R
\name{ImmuPop_timet_est}
\alias{ImmuPop_timet_est}
\title{Estimate Population Immunity, Reduction in R0, GMT, and Proportion of Non-Naive Individuals}
\usage{
ImmuPop_timet_est(
  df,
  protect_c,
  protect_a,
  age_prop,
  contact_matrix,
  sim_num = 500
)
}
\arguments{
\item{df}{Data frame containing individual data, including age group and raw titer values.}

\item{protect_c}{Numeric vector of protection effect for children.}

\item{protect_a}{Numeric vector of protection effect for adults.}

\item{age_prop}{Numeric vector representing age group proportions in the population.}

\item{contact_matrix}{Numeric matrix of contact frequencies between age groups.}

\item{sim_num}{Number of bootstrap simulations (default = 500).}
}
\value{
A dataframe with baseline immunity estimates, including the median and 95% CI.
}
\description{
This function estimates population immunity, the relative reduction in transmissibility (R0),
the geometric mean titer (GMT), and the proportion of individuals with HI > 5 using bootstrap sampling
and MCMC methods. It considers multiple age groups and various parameters related to immunity.
}
\examples{
# Example usage of ImmuPop_timet_est
data("ImmuPop_raw_data")
data_example <- generate_data(ImmuPop_raw_data, cut_age = c(0, 18, 50, 100))

# Define age group proportions
age_prop <- c(0.2, 0.4, 0.4)

# Define contact matrix
contact_matrix <- matrix(c(22, 16, 15, 24, 28, 30, 18, 32, 35), nrow = 3, byrow = TRUE)

# Define protection effects for children and adults
protect_c <- c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)
protect_a <- c(0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95)

# Data at a specific time point (e.g., time == 200)
data_example_t <- data_example[data_example$time == 200, ]

# Run the estimation function
result <- ImmuPop_timet_est(
  df = data_example_t,
  protect_c = protect_c,
  protect_a = protect_a,
  age_prop = age_prop,
  contact_matrix = contact_matrix,
  sim_num = 100
)

# Print the result
print(result)
}
